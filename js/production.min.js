/* ==========================================================================
    Styleguide -- Version: 0.4.1 - Updated: 2/22/2014
    ========================================================================== */

// Create Hex color code from color return
function hexc(colorval) {
	var parts = colorval.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
	delete(parts[0]);
	for (var i = 1; i <= 3; ++i) {
		parts[i] = parseInt(parts[i]).toString(16);
		if (parts[i].length == 1) parts[i] = '0' + parts[i];
	}
	color = '#' + parts.join('');
}

// Get color value of swatch and print to div
var color = '';
$('.swatch').each(function() {
	var classList = $(this).children('.swatch-color').attr('class').split(' ');
	for(i=0; i <= classList.length-1; i++){
		if(classList[i].match(/color-/g)){
			$(this).children('.swatch-info').prepend('<p>$' + classList[i] + '</p>');
			break;
		}
	}
	var x = $(this).children('.swatch-color').css('backgroundColor');
	hexc(x);
	$(this).children('.swatch-info').append('<p>' + color + '</p>');
	$(this).children('.swatch-info').append('<p>' + x + '</p>');
});

(function($) {

	$.fn.vs = function() {
        // View source buttons
        $('.vs').click(function(){
        	$(this).parent().next().find('.prettyprint').toggle();
        	$(this).not('.disabled').toggleClass('js-active');
        	return false;
        });
      }

    }(jQuery));

$('.vs').vs();

// Get font-family property and return
$('.fonts').each(function(){
	var fonts = $(this).css('font-family');
	$(this).prepend(fonts);
});
;function equalHeight(group) {
  group.removeAttr('style');
  if ($(window).width() > mediumBreakPoint) {
    var tallest = 0;
    group.each(function() {
      var thisHeight = $((this).outerHeight() + 20);
      if(thisHeight > tallest) {
        tallest = thisHeight;
      }
    });
    group.height(tallest);
  } else {

  }
}

$(window).on('load', function(){
  equalHeight($('.equal'));
});
;// Open all external links in a new window
// $('a[href^="http://"], a[href^="https://"], a[href$=".pdf"]').attr('target','_blank');
// $('a[href^=mailto]').attr('target','_self');

// $('a').each(function() {
//   var a = new RegExp('/' + window.location.host + '/');
//   if(!a.test(this.href)) {
//     $(this).click(function(event) {
//       event.preventDefault();
//       event.stopPropagation();
//       window.open(this.href, '_blank');
//     });
//   }
// });
;$('img.svg').each(function(){
  var $img = $(this);
  var imgID = $img.attr('id');
  var imgClass = $img.attr('class');
  var imgURL = $img.attr('src');

  $.get(imgURL, function(data) {
    // Get the SVG tag, ignore the rest
    var $svg = $(data).find('svg');

    // Add replaced image's ID to the new SVG
    if(typeof imgID !== 'undefined') {
      $svg = $svg.attr('id', imgID);
    }
    // Add replaced image's classes to the new SVG
    if(typeof imgClass !== 'undefined') {
      $svg = $svg.attr('class', imgClass+' replaced-svg');
    }

    // Remove any invalid XML tags as per http://validator.w3.org
    $svg = $svg.removeAttr('xmlns:a');

    // Replace image with new SVG
    $img.replaceWith($svg);

  }, 'xml');
});
;// Detect for touch
var isTouch = 'ontouchstart' in document.documentElement;
;var smallBreakPoint = 640;
var mediumBreakPoint = 768;;// any link that is not part of the current domain is modified

(function() {
  var links = document.links;
  for (var i = 0, linksLength = links.length; i < linksLength; i++) {
    // can also be
    //  links[i].hostname != 'subdomain.example.com'
    if (links[i].hostname != window.location.hostname) {
      links[i].target = '_blank';
      links[i].className += ' externalLink';
    }
  }
})();
;// add the week number to the form
$("#weekly").on("submit", function () {
  $('<fieldset><input type="hidden" name="Week" value="Week '+parseFloat(week + 1)+'"></fieldset>').appendTo('.hidden');
});

// capture the submitters email and put it in as the _cc value
$(function() {
  $('#email').change(function() {
    var value = $(this).val();
    $('#copy').val(value);
  });
});

// Use localstorage to keep form fields completed
$(function() {
  $(window).unload(saveSettings);
  loadSettings();
});

function loadSettings() {
  $('#name').val(localStorage.name);
  $('#email').val(localStorage.email);
}

function saveSettings() {
  localStorage.name = $('#name').val();
  localStorage.email = $('#email').val();
}
;// Variable to hold request
var request;

// Bind to the submit event of our form
$("#weekly").submit(function(event) {

    // Abort any pending request
    if (request) {
        request.abort();
    }
    // setup some local variables
    var $form = $(this);

    // Let's select and cache all the fields
    var $inputs = $form.find("input, select, button, textarea");

    // Serialize the data in the form
    var serializedData = $form.serialize();

    // Let's disable the inputs for the duration of the Ajax request.
    // Note: we disable elements AFTER the form data has been serialized.
    // Disabled form elements will not be serialized.
    // $inputs.prop("disabled", true);

    // Fire off the request to /form.php
    request = $.ajax({
        url: "https://script.google.com/macros/s/AKfycby7D7lSIU3gBfX7m7jgRC5HcGj402jOHbDosFYUamBRWEX-PZE9/exec",
        type: "post",
        data: serializedData
    });

    // Callback handler that will be called on success
    request.done(function (response, textStatus, jqXHR){
        // Log a message to the console
        console.log("Hooray, it worked!");
        console.log(response);
        console.log(textStatus);
        console.log(jqXHR);
    });

    // Callback handler that will be called on failure
    request.fail(function (jqXHR, textStatus, errorThrown){
        // Log the error to the console
        console.error(
            "The following error occurred: "+
            textStatus, errorThrown
        );
    });

    // Callback handler that will be called regardless
    // if the request failed or succeeded
    request.always(function () {
        // Reenable the inputs
        $inputs.prop("disabled", false);
    });

    // Prevent default posting of form
    // event.preventDefault();
});
;// Get JSON for Season Leaderboard
$.ajax({
  dataType: 'json',
  url: '/json/season-leaderboard.json',
  success: function(data) {

    var rank = 0;
    var rankGames = 0;
    var counter = 1;

    var tr;
    data.sort(function(a,b) { return parseFloat(b.total) - parseFloat(a.total) } );

    for (i = 0; i < data.length; i++) {

      var gamesWon = data[i].total;
      var gamesLost = (gamesTotal - gamesWon);

      if (rankGames != gamesWon) {
        var rank = counter;
        var rankGames = gamesWon;
      } else if (rankGames == gamesWon) {
        var rank = rank;
      }

      if (i == 0) {
        var divisor = (100 / gamesWon);
      }

      var tdWidth = ((gamesWon / gamesTotal) *100).toFixed(2) + "%";
      var winPct = (gamesWon * divisor).toFixed(2) + "%";

      tr = $('<tr/>');
      tr.append('<td style="width: ' + winPct +'"><span class="rank">' + rank + '</span><span class="player">' + data[i].player + '</span><span class="total right" data-record="' + gamesWon + ' - ' + gamesLost + '" data-pct="' + tdWidth + '"></span></td>');
      $('#season-leaderboard').append(tr);

      counter++;
    }
  }
});

// Get JSON for Weekly Leaderboard
$.ajax({
  dataType: 'json',
  url: '/json/weekly-leaderboard.json',
  success: function(data) {

    var rank = 0;
    var rankGames = 0;
    var counter = 1;

    var tr;
    data.sort(function(a,b) { return parseFloat(b.total) - parseFloat(a.total) } );

    $('<span class="text-center week-nav"> Week '+parseFloat(week + 1)+' Leaders</span>').appendTo('.weekly-total');

    for (i = 0; i < data.length; i++) {

      var gamesWon = data[i].total;

      if (rankGames != gamesWon) {
        var rank = counter;
        var rankGames = gamesWon;
      } else if (rankGames == gamesWon) {
        var rank = rank;
      }

      if (i == 0) {
        var divisor = (100 / gamesWon);
      }

      var tdWidth = ((gamesWon / gamesTotal) *100).toFixed(2) + "%";
      var winPct = (gamesWon * divisor).toFixed(2) + "%";

      tr = $('<tr/>');
      tr.append('<td style="width: ' + winPct +'"><span class="rank">' + rank + '</span><span class="player">' + data[i].player + '</span><span class="total right" data-record="' + data[i].total + '" data-pct="' + tdWidth + '"></span></td>');
      $('#weekly-leaderboard').append(tr);

      counter++;
    }
  }
});
;var week1 = new Date();
var week2 = new Date('9/07/2017');
var week3 = new Date('9/14/2017');
var week4 = new Date('9/21/2017');
var week5 = new Date('9/28/2017');
var week6 = new Date('10/05/2017');
var week7 = new Date('10/12/2017');
var week8 = new Date('10/19/2017');
var week9 = new Date('10/26/2017');
var week10 = new Date('11/02/2017');
var week11 = new Date('11/09/2017');
var week12 = new Date('11/16/2017');
var week13 = new Date('11/23/2017');
var week14 = new Date('11/30/2017');
var week15 = new Date('12/07/2017');
var week16 = new Date('12/14/2017');
var week17 = new Date('12/23/2017');
var week18 = new Date('12/31/2017');

var today = new Date();
if (week1 > today) {
  var week = 0;
} if (week1 <= today) {
  var week = 0;
} if (week2 <= today) {
  var week = 1;
} if (week3 <= today) {
  var week = 2;
} if (week4 <= today) {
  var week = 3;
} if (week5 <= today) {
  var week = 4;
} if (week6 <= today) {
  var week = 5;
} if (week7 <= today) {
  var week = 6;
} if (week8 <= today) {
  var week = 7;
} if (week9 <= today) {
  var week = 8;
} if (week10 <= today) {
  var week = 9;
} if (week11 <= today) {
  var week = 10;
} if (week12 <= today) {
  var week = 11;
} if (week13 <= today) {
  var week = 12;
} if (week14 <= today) {
  var week = 13;
} if (week15 <= today) {
  var week = 14;
} if (week16 <= today) {
  var week = 15;
} if (week17 <= today) {
  var week = 16;
} if (week18 <= today) {
  var week = 17;
} else {

}

var plus_one = 1;
var week_number = week + plus_one;

var gamesTotal = 256;

getData(week);

$(document).on('click touchstart', '.pag', function () {
  $('.matches').html('');
  getData($(this).data('week'));
});

function getData(week) {
  // Get JSON for schedule
  $('.week-nav').html('');
  $.ajax({
    dataType: 'json',
    url: '/json/nfl2017.json',
    success: function(data) {
    // Label the week
    $('<span class="text-center week-nav"><span class="pag prev" data-week="'+parseFloat(week - 1)+'"></span> Week '+parseFloat(week + 1)+' <span class="pag next" data-week="'+parseFloat(week + 1)+'"></span> </span>').appendTo('#weekly h1');
    if (week == 0) {
      $('.prev').hide();
    } else if (week == 16) {
      $('.next').hide();
    }
    $('#subject').val('Week '+parseFloat(week + 1)+' Picks');
    // get the number of game days
    for (i = 0; i < data[week].game_days.length; i++) {

      // set number of matches per game day
      for (m = 0; m < data[week].game_days[i].matches.length; m++) {

        // variabilize the games
        var game_date = data[week].game_days[i].date;
        var game_id = data[week].game_days[i].matches[m].id;
        var last_game = data[week].game_days[i].matches[m].last;
        var location = data[week].game_days[i].matches[m].home.stadium;
        var station = data[week].game_days[i].matches[m].tv;
        var away_id = data[week].game_days[i].matches[m].away.nick;
        var home_id = data[week].game_days[i].matches[m].home.nick;

        // let's get the game time and format it
        Number.prototype.pad = function (len) {
          return (new Array(len+1).join("0") + this).slice(-len);
        }
        var timestamp = new Date(data[week].game_days[i].matches[m].timestamp);
        var day_of_game = data[week].game_days[i].matches[m].timestamp.slice(0,3);
        var hours = timestamp.getHours() % 12 || 12;
        var minutes = timestamp.getMinutes().pad(2);
        var time = +hours+ ':' +minutes;

        // variabilize the teams
        var away = data[week].game_days[i].matches[m].away.nick;
        var home = data[week].game_days[i].matches[m].home.nick;

        // color the chosen label with team color
        var labelID;

        $('label').click(function() {
          labelID = $(this).attr('for');
        });



        $(function() {
          var loc = document.getElementsByClassName("location");
          var i;

          for (i = 0; i < loc.length; i++) {
            loc[i].onclick = function(){
              this.classList.toggle("active");
              this.nextElementSibling.classList.toggle("show");
            }
          }
        });



        // if Monday add game total inputs
        if (last_game == true) {
          $('<h3>Tie-Breaker Game</h3><li>
            <div class="teams">
            <div class="half away">
            <input type="radio" class="radio" id="'+away_id+'" name="Game'+game_id+'" value="'+away+'" required>
            <label for="'+away_id+'"><img src="/images/logos/'+away+'.png" style="float: right;" alt="'+away+' logo" />'+away+'</label>
            </div>
            <div class="half home">
            <input type="radio" class="radio" id="'+home_id+'" name="Game'+game_id+'" value="'+home+'" required>
            <label for="'+home_id+'"><img src="/images/logos/'+home+'.png" style="float: left;" alt="'+home+' logo" />'+home+'</label>
            </div>
            </div>
            <div class="full location mon">
            <strong> '+day_of_game+' '+time+' MST on '+station+'</strong> <span class="mobile-hidden"> - </span> <br class="rwd-break">'+location+'
            </div>

            <div class="full">
            <label for="'+game_id+'" class="total_score">Game Total:</label>
            <input type="number" min="0" inputmode="numeric" pattern="[0-9]*" class="total_score" id="'+game_id+'" name="Score'+game_id+'" placeholder="0" required>
            </div>

            </li>').appendTo('.matches');
          } else { // or don't
          $('<li>
            <div class="teams">
            <div class="half away">
            <input type="radio" class="radio" id="'+away_id+'" name="Game'+game_id+'" value="'+away+'" required>
            <label for="'+away_id+'"><img src="/images/logos/'+away+'.png" style="float: right;" alt="'+away+' logo" />'+away+'</label>
            <span class="standings"></span>
            </div>
            <div class="half home">
            <input type="radio" class="radio" id="'+home_id+'" name="Game'+game_id+'" value="'+home+'" required>
            <label for="'+home_id+'"><img src="/images/logos/'+home+'.png" style="float: left;" alt="'+home+' logo" />'+home+'</label>
            </div>
            </div>
            <div class="full location">
            <strong> '+day_of_game+' '+time+' MST on '+station+'</strong> <span class="mobile-hidden"> - </span> <br class="rwd-break">'+location+'
            </div>
            </li>').appendTo('.matches');
        }

        // if a game has started, disable it's selection and do not make it required
        var now = new Date();
        if (now > timestamp) {
          $('.teams input[type=radio]').removeAttr('required').attr('disabled', true);
        }
      }
    }
  }
});
        }





// Get JSON for team records
// $.ajax({
//   dataType: 'json',
//   url: '/json/records.json',
//   success: function(data) {

//     for (i = 0; i < data.length; i++) {
//       var wins = data[i].wins;
//       var ties = data[i].ties;
//       var losses = data[i].losses;
//       var team = data[i].team;

//       var teamRecord = +team+(wins+ '-' +ties+ '-' +losses);
//       $('<div class="row marginless"><div class="half records">'+teamRecord+'</div></div>').appendTo('.standings');
//     }
//   }
// });
; // ID of the Google Spreadsheet
 var spreadsheetID = "1_w6b0iUDaUbKD6qLD52BcRG1pIMh90P-Av4o0w5TAB8";

 // Make sure it is public or set to Anyone with link can view
 var url = "https://spreadsheets.google.com/feeds/list/" + spreadsheetID + "/default/public/values?alt=json";

 $.getJSON(url, function(data) {

  var entry = data.feed.entry;

  // count the players
  var playerCount = entry.length;
  $('.player-count').append("<span>"+playerCount+"</span>");

  // calculate the pot
  var weeklyPot = ((playerCount * 5) * .9).toFixed(2);
  var seasonPot = '210.50';
  $('.weekly-pot').append("<span> $"+weeklyPot+"</span>");
  $('.season-pot').append("<span> $"+seasonPot+"</span>");

  // Pick trends


});


